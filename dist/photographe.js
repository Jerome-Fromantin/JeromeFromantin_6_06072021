/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./mediaFactory.js":
/*!*************************!*\
  !*** ./mediaFactory.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MediaFactory\": () => (/* binding */ MediaFactory)\n/* harmony export */ });\n// Cette classe utilise 2 instances d'autres classes afin de construire la lightbox pour chaque média.\r\nclass MediaFactory {\r\n    constructor (type, data) {\r\n        if (!data) {\r\n            throw new Error(\"Vous avez oublié des éléments !\");\r\n        }\r\n        switch (type) {\r\n            case \"picture\":\r\n                return new LightboxPic(data);\r\n            case \"movie\":\r\n                return new LightboxVid(data);\r\n            default:\r\n                throw new Error(\"Type de données non reconnu !\");\r\n        }\r\n    }\r\n}\r\n\r\n// Cette classe concerne les médias \"image\".\r\nclass LightboxPic {\r\n    picture = null;\r\n    constructor (data) {\r\n        const {param1, param2} = data;\r\n        this.picture = this.xxx(param1, param2)\r\n    }\r\n\r\n    xxx(param1, param2) {\r\n        // Contenu\r\n        return aaa;\r\n    }\r\n\r\n    toHTML() {\r\n        return this.picture;\r\n    }\r\n}\r\n\r\n// Cette classe concerne les médias \"vidéo\".\r\nclass LightboxVid {\r\n    movie = null;\r\n    constructor (data) {\r\n        const {param1, param2} = data;\r\n        this.movie = this.yyy(param1, param2)\r\n    }\r\n\r\n    yyy(param1, param2) {\r\n        // Contenu\r\n        return bbb;\r\n    }\r\n\r\n    toHTML() {\r\n        return this.movie;\r\n    }\r\n}\n\n//# sourceURL=webpack://projet06/./mediaFactory.js?");

/***/ }),

/***/ "./scripts-photographe.js":
/*!********************************!*\
  !*** ./scripts-photographe.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./services */ \"./services.js\");\n/* harmony import */ var _mediaFactory__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mediaFactory */ \"./mediaFactory.js\");\n// Récupération des données \"photographes\" du fichier JSON.\r\n\r\n\r\n// Récupération des données \"médias\" du fichier JSON.\r\n\r\n\r\n// Récupération des données dynamiques pour chaque média de la lightbox.\r\n\r\n\r\n// PAGE DE PHOTOGRAPHE\r\n// Récupère dynamiquement l'id du photographe concerné.\r\nlet param = new URLSearchParams(window.location.search);\r\nlet thePhotographerId = param.get(\"id\");\r\n\r\n// PARTIE PRESENTATION DU PHOTOGRAPHE\r\n// Partie gauche de la présentation : Récupère dynamiquement le nom pour le h1.\r\nfunction photoH1(photographerName) {\r\n  let title = document.createElement(\"h1\");\r\n  title.innerText = photographerName;\r\n  title.id = \"dyn_photo_h1\";\r\n  return title;\r\n}\r\n\r\n// Partie gauche de la présentation : Récupère dynamiquement les données pour les 2 lignes de description.\r\nfunction photoDescr(photographerCity, photographerCountry, photographerTagline) {\r\n  let description = document.createElement(\"div\");\r\n  let descriptionPlace = document.createElement(\"p\");\r\n  descriptionPlace.innerText = photographerCity + \", \" + photographerCountry;\r\n  descriptionPlace.id = \"dyn_photo_pres_lieu\";\r\n  descriptionPlace.setAttribute(\"lang\", \"en\");\r\n  descriptionPlace.setAttribute(\"aria-label\", photographerCity + \", \" + photographerCountry);\r\n  let descriptionSlogan = document.createElement(\"p\");\r\n  descriptionSlogan.innerText = photographerTagline;\r\n  descriptionSlogan.id = \"dyn_photo_pres_slogan\";\r\n  descriptionSlogan.setAttribute(\"aria-label\", photographerTagline);\r\n  description.appendChild(descriptionPlace);\r\n  description.appendChild(descriptionSlogan);\r\n  return description;\r\n}\r\n\r\n// Partie gauche de la présentation : Récupère dynamiquement les données pour les tags.\r\nfunction photoTags(photographerTags) {\r\n  let tagGroup = document.createElement(\"nav\");\r\n  tagGroup.id = \"dyn_photo_pres_barnav\";\r\n  tagGroup.setAttribute(\"lang\", \"en\");\r\n  tagGroup.setAttribute(\"aria-label\", \"Catégories du photographe\");\r\n  for (let photographerTag of photographerTags) {\r\n    let tagGroupLink = document.createElement(\"a\");\r\n    tagGroupLink.href = \"#\";\r\n    tagGroupLink.className = \"photo_pres_tag\";\r\n    tagGroupLink.setAttribute(\"aria-label\", photographerTag);\r\n    let tagGroupspan = document.createElement(\"span\");\r\n    tagGroupspan.innerText = \"#\" + photographerTag;\r\n    tagGroupLink.appendChild(tagGroupspan);\r\n    tagGroup.appendChild(tagGroupLink);\r\n  }\r\n  return tagGroup;\r\n}\r\n\r\n// Organise toutes les données précédemment récupérées.\r\nfunction fillLeftPart(photographerName, photographerCity, photographerCountry, photographerTagline, photographerTags) {\r\n  let leftPart = document.createElement(\"section\");\r\n  leftPart.id = \"photo_pres_leftText\";\r\n  let title = photoH1(photographerName)\r\n  let descr = photoDescr(photographerCity, photographerCountry, photographerTagline)\r\n  let tags = photoTags(photographerTags);\r\n  leftPart.appendChild(title);\r\n  leftPart.appendChild(descr);\r\n  leftPart.appendChild(tags);\r\n  return leftPart;\r\n}\r\n\r\n// Récupère le formulaire caché pour la fonction suivante.\r\nlet formModal = document.getElementById(\"form_section\");\r\n\r\n// Partie gauche de la présentation : Le bouton de contact ouvre le formulaire.\r\nfunction contactButton() {\r\n  let buttonLink = document.createElement(\"a\");\r\n  buttonLink.href = \"#\";\r\n  buttonLink.id = \"dyn_photo_contact_link\";\r\n  buttonLink.setAttribute(\"aria-label\", \"Contact Me\");\r\n  buttonLink.onclick = function(event) {\r\n    event.preventDefault();\r\n    formModal.style.display = \"block\";\r\n  }\r\n  let buttonSpan = document.createElement(\"span\");\r\n  buttonSpan.innerText = \"Contactez-moi\";\r\n  buttonLink.appendChild(buttonSpan);\r\n  return buttonLink;\r\n}\r\n\r\n// Montre la partie gauche de la présentation (texte et bouton) remplie dynamiquement.\r\nfunction showLeftPart(photographer) {\r\n  let sectionleft = document.querySelector(\"#photo_pres_text\");\r\n  let leftPart = fillLeftPart(photographer.name, photographer.city, photographer.country, photographer.tagline, photographer.tags);\r\n  let contact = contactButton();\r\n  sectionleft.appendChild(leftPart);\r\n  sectionleft.appendChild(contact);\r\n  showMobileContact(photographer.id);\r\n  showLikesNPrice(photographer.id, photographer.price);\r\n}\r\n\r\n// Partie droite de la présentation : Récupère dynamiquement le nom de l'image.\r\nfunction photoImg(photographerPortrait, photographerName) {\r\n  let image = document.createElement(\"img\");\r\n  image.src = \"Images/ID_Photos/\" + photographerPortrait;\r\n  image.className = \"dyn_round_img\";\r\n  image.id=\"dyn_photo_round_img\";\r\n  image.setAttribute(\"aria-label\", photographerName);\r\n  return image;\r\n}\r\n\r\n// Montre la présentation entière remplie dynamiquement.\r\nasync function showPresent(id) {\r\n  let photographer = await (0,_services__WEBPACK_IMPORTED_MODULE_0__.getPhotographer)(id);\r\n  let presentation = document.querySelector(\"#photo_pres\");\r\n  showLeftPart(photographer);\r\n  let imgPart = photoImg(photographer.portrait, photographer.name);\r\n  presentation.appendChild(imgPart);\r\n}\r\n\r\nshowPresent(thePhotographerId);\r\n\r\n// PARTIE GALERIE DE PHOTOGRAPHIES\r\n// Récupère la lightbox cachée pour la fonction suivante.\r\nlet lightbox = document.getElementById(\"lightbox_section\");\r\n\r\n// Récupère le header et le \"main\" à cacher pour la fonction suivante.\r\nlet photoHeader = document.getElementById(\"photo_header\");\r\nlet photoMain = document.getElementById(\"photo_main\");\r\n\r\n// Chaque carte de la page de photographe : Récupère dynamiquement l'image pour le lien.\r\n// Cliquer sur l'image ferme le header et le \"main\" et ouvre la lightbox.\r\nfunction photoPhotoLink(photographerId, image, title, description, index) {\r\n  let photoLink = document.createElement(\"a\");\r\n  photoLink.href = \"#\";\r\n  photoLink.className = \"dyn_photo_photoLink\";\r\n  photoLink.setAttribute(\"aria-label\", \"Photographie\");\r\n  let photoLinkImg = document.createElement(\"img\");\r\n  photoLinkImg.src = \"Images/Thumbnails/\" + photographerId + \"/\" + image;\r\n  photoLinkImg.className = \"dyn_photo_img\";\r\n  photoLinkImg.onclick = function(event) {\r\n    event.preventDefault();\r\n    photoHeader.style.display = \"none\";\r\n    photoMain.style.display = \"none\";\r\n    lightbox.style.display = \"block\";\r\n    showLightbox(photographerId, image, title, description, index);\r\n  }\r\n  photoLink.setAttribute(\"lang\", \"en\");\r\n  photoLink.setAttribute(\"alt\", description);\r\n  photoLink.appendChild(photoLinkImg);\r\n  return photoLink;\r\n}\r\n\r\n// Chaque carte de la page de photographe : Récupère dynamiquement les données pour la ligne de description.\r\nfunction photoCardDescr(title, likes) {\r\n  let description = document.createElement(\"div\");\r\n  description.className = \"photo_card_titleLikes\";\r\n  description.setAttribute(\"lang\", \"en\");\r\n  let descriptionTitle = document.createElement(\"span\");\r\n  descriptionTitle.innerText = title;\r\n  descriptionTitle.className = \"dyn_title\";\r\n  descriptionTitle.setAttribute(\"aria-label\", \"Titre de la photo\");\r\n  let descriptionLikes = document.createElement(\"span\");\r\n  descriptionLikes.className = \"dyn_likes\";\r\n  descriptionLikes.setAttribute(\"aria-label\", \"Likes de la photo\");\r\n  let descriptionLikesNumber = document.createElement(\"span\");\r\n  descriptionLikesNumber.innerText = likes;\r\n  descriptionLikesNumber.setAttribute(\"aria-label\", \"Nombre de likes\");\r\n  let descriptionLikesIcon = document.createElement(\"img\");\r\n  descriptionLikesIcon.src = \"Images/Icone-coeur.png\";\r\n  descriptionLikesIcon.className = \"icone\";\r\n  descriptionLikesIcon.addEventListener(\"click\", () => {\r\n    descriptionLikesNumber.innerText = Number(descriptionLikesNumber.innerText) + 1;\r\n    let newTotal = document.getElementById(\"dyn_likes_number\");\r\n    newTotal.innerText = Number(newTotal.innerText) + 1;\r\n  })\r\n  descriptionLikes.setAttribute(\"alt\", \"Likes\");\r\n  description.appendChild(descriptionTitle);\r\n  descriptionLikes.appendChild(descriptionLikesNumber);\r\n  descriptionLikes.appendChild(descriptionLikesIcon);\r\n  description.appendChild(descriptionLikes);\r\n  return description;\r\n}\r\n\r\n// Organise en carte toutes les données médias précédemment récupérées.\r\nfunction fillArticle(picture, index) {\r\n  let fullArticle = document.createElement(\"article\");\r\n  fullArticle.className = \"photo_card\";\r\n  let link = photoPhotoLink(picture.photographerId, picture.image, picture.title, picture.description, index);\r\n  let descr = photoCardDescr(picture.title, picture.likes);\r\n  fullArticle.appendChild(link);\r\n  fullArticle.appendChild(descr);\r\n  return fullArticle;\r\n}\r\n\r\n// Variable utilisée pour contenir les médias.\r\nlet pictures = [];\r\n\r\n// Montre toutes les cartes remplies dynamiquement.\r\nasync function showPhotos(id) {\r\n  pictures = await (0,_services__WEBPACK_IMPORTED_MODULE_0__.getMediasByPhotographers)(id);\r\n  let section = document.querySelector(\".photo_gallery\");\r\n  for (let picture of pictures) {\r\n    let index = pictures.indexOf(picture);\r\n    let article = fillArticle(picture, index);\r\n    section.appendChild(article);\r\n  }\r\n}\r\n\r\nshowPhotos(thePhotographerId);\r\n\r\n// LISTE DEROULANTE DE TRIS (POPULARITE, DATE, TITRE)\r\n// Montre toutes les cartes remplies dynamiquement triées par popularité.\r\nasync function showPhotosByLikes(id) {\r\n  pictures = await (0,_services__WEBPACK_IMPORTED_MODULE_0__.getMediasByPhotographers)(id);\r\n  let triLikes = document.getElementById(\"tri_likes\");\r\n  triLikes.onclick = function(event) {\r\n    event.preventDefault();\r\n    pictures.sort((a, b) => b.likes - a.likes);\r\n    let section = document.querySelector(\".photo_gallery\");\r\n    section.innerText = \"\";\r\n    for (let picture of pictures) {\r\n      let article = fillArticle(picture);\r\n      section.appendChild(article);\r\n    }\r\n  }\r\n}\r\n\r\nshowPhotosByLikes(thePhotographerId);\r\n\r\n// Montre toutes les cartes remplies dynamiquement triées par date.\r\nasync function showPhotosByDate(id) {\r\n  pictures = await (0,_services__WEBPACK_IMPORTED_MODULE_0__.getMediasByPhotographers)(id);\r\n  let triDate = document.getElementById(\"tri_date\");\r\n  triDate.onclick = function(event) {\r\n    event.preventDefault();\r\n    pictures.sort((a, b) => a.date > b.date);\r\n    let section = document.querySelector(\".photo_gallery\");\r\n    section.innerText = \"\";\r\n    for (let picture of pictures) {\r\n      let article = fillArticle(picture);\r\n      section.appendChild(article);\r\n    }\r\n  }\r\n}\r\n\r\nshowPhotosByDate(thePhotographerId);\r\n\r\n// Montre toutes les cartes remplies dynamiquement triées par titre.\r\nasync function showPhotosByTitle(id) {\r\n  pictures = await (0,_services__WEBPACK_IMPORTED_MODULE_0__.getMediasByPhotographers)(id);\r\n  let triTitre = document.getElementById(\"tri_titre\");\r\n  triTitre.onclick = function(event) {\r\n    event.preventDefault();\r\n    pictures.sort((a, b) => a.title > b.title);\r\n    let section = document.querySelector(\".photo_gallery\");\r\n    section.innerText = \"\";\r\n    for (let picture of pictures) {\r\n      let article = fillArticle(picture);\r\n      section.appendChild(article);\r\n    }\r\n  }\r\n}\r\n\r\nshowPhotosByTitle(thePhotographerId);\r\n\r\n// BOUTON DE CONTACT EN BAS EN VERSION MOBILE\r\n// Récupère dynamiquement le lien de contact pour le bouton en version mobile.\r\nfunction mobileContactButton() {\r\n  let buttonLink = document.createElement(\"a\");\r\n  buttonLink.href = \"#\";\r\n  buttonLink.id = \"dyn_photo_contact_link_mobile\";\r\n  buttonLink.setAttribute(\"aria-label\", \"Contact Me\");\r\n  buttonLink.onclick = function(event) {\r\n    event.preventDefault();\r\n    formModal.style.display = \"block\";\r\n  }\r\n  let buttonSpan = document.createElement(\"span\");\r\n  buttonSpan.innerText = \"Contactez-moi\";\r\n  buttonLink.appendChild(buttonSpan);\r\n  return buttonLink;\r\n}\r\n\r\n// Montre la section remplie dynamiquement.\r\nfunction showMobileContact() {\r\n  let section = document.querySelector(\"#mobile_contact_parent\");\r\n  let mobileContact = mobileContactButton();\r\n  section.appendChild(mobileContact);\r\n}\r\n\r\n// PARTIE \"LIKES ET PRIX\" EN BAS A DROITE\r\n// Likes et prix : Récupère dynamiquement le nombre total de likes et le prix du photographe.\r\nasync function bottomRight(id, photographerPrice) {\r\n  pictures = await (0,_services__WEBPACK_IMPORTED_MODULE_0__.getMediasByPhotographers)(id);\r\n  let valeurInitiale = 0;\r\n  let totalLikes = pictures.reduce((accumulateur, valeurCourante) => accumulateur + valeurCourante.likes, valeurInitiale);\r\n\r\n  let bottomRightDiv = document.createElement(\"div\");\r\n  bottomRightDiv.id = \"likes_prix_child\";\r\n  let bottomRightLikes = document.createElement(\"span\");\r\n  bottomRightLikes.id = \"dyn_likes\";\r\n  bottomRightLikes.setAttribute(\"aria-label\", \"Total des likes\");\r\n  let bottomRightLikesNumber = document.createElement(\"span\");\r\n  bottomRightLikesNumber.id = \"dyn_likes_number\";\r\n  bottomRightLikesNumber.innerText = totalLikes;\r\n  bottomRightLikesNumber.setAttribute(\"aria-label\", \"Nombre total des likes\");\r\n  let bottomRightLikesIcon = document.createElement(\"img\");\r\n  bottomRightLikesIcon.src = \"Images/Icone-coeur-noir.png\";\r\n  bottomRightLikesIcon.className = \"icone\";\r\n  bottomRightLikesIcon.id = \"icone\";\r\n  bottomRightLikesIcon.setAttribute(\"alt\", \"Likes\");\r\n  let bottomRightPrice = document.createElement(\"span\");\r\n  bottomRightPrice.innerText = photographerPrice + \"€ / jour\";\r\n  bottomRightPrice.className = \"dyn_prix\";\r\n  bottomRightPrice.setAttribute(\"aria-label\", \"Prix du photographe\");\r\n  bottomRightLikes.appendChild(bottomRightLikesNumber);\r\n  bottomRightLikes.appendChild(bottomRightLikesIcon);\r\n  bottomRightDiv.appendChild(bottomRightLikes);\r\n  bottomRightDiv.appendChild(bottomRightPrice);\r\n  return bottomRightDiv;\r\n}\r\n\r\n// Montre la section remplie dynamiquement.\r\nasync function showLikesNPrice(id, photographerPrice) {\r\n  let section = document.querySelector(\"#likes_prix\");\r\n  let likesNPrice = await bottomRight(id, photographerPrice);\r\n  section.appendChild(likesNPrice);\r\n}\r\n\r\n// FENETRE LIGHTBOX-MODAL\r\n// Crée dynamiquement la lightbox pour chaque image.\r\nfunction createLightbox(id, image, title, description, index) {\r\n  let lightboxMain = document.createElement(\"section\");\r\n  lightboxMain.id = \"lightbox_main\";\r\n  lightboxMain.setAttribute(\"aria-label\", \"All the lightbox\");\r\n\r\n  let lightPrevLink = document.createElement(\"a\");\r\n  lightPrevLink.href = \"#\";\r\n  lightPrevLink.className = \"lightbox-icons\";\r\n  lightPrevLink.setAttribute(\"aria-label\", \"Previous image\");\r\n  lightPrevLink.addEventListener(\"click\", clickPrev);\r\n  function clickPrev() {\r\n    lightboxNavigate(index - 1);\r\n  }\r\n  lightPrevLink.addEventListener(\"keydown\", keyDownPrev);\r\n  function keyDownPrev(e) {\r\n    if (e.key == 'Enter') {\r\n      lightboxNavigate(index - 1);\r\n    }\r\n  };\r\n\r\n  let lightPrevIcon = document.createElement(\"img\");\r\n  lightPrevIcon.src = \"Images/Icone-fleche-gauche.png\";\r\n  lightPrevIcon.className = \"lightbox-icon\";\r\n  lightPrevIcon.setAttribute(\"alt\", \"Previous icon\");\r\n  \r\n  lightPrevLink.appendChild(lightPrevIcon);\r\n  lightboxMain.appendChild(lightPrevLink);\r\n\r\n  let lightImgAndTitle = document.createElement(\"section\");\r\n  lightImgAndTitle.id = \"lightbox-imgAndTitle\";\r\n  lightImgAndTitle.setAttribute(\"aria-label\", \"Media and title\");\r\n\r\n  let lightboxMedia = document.createElement(\"img\");\r\n  lightboxMedia.src = \"Images/\" + id + \"/\" + image;\r\n  lightboxMedia.id = \"lightbox-img\";\r\n  lightboxMedia.setAttribute(\"alt\", description);\r\n\r\n  let lightboxTitle = document.createElement(\"p\");\r\n  lightboxTitle.id = \"lightbox-parag\";\r\n  lightboxTitle.innerText = title;\r\n  \r\n  lightImgAndTitle.appendChild(lightboxMedia);\r\n  lightImgAndTitle.appendChild(lightboxTitle);\r\n  lightboxMain.appendChild(lightImgAndTitle);\r\n\r\n  let lightNextLink = document.createElement(\"a\");\r\n  lightNextLink.href = \"#\";\r\n  lightNextLink.className = \"lightbox-icons\";\r\n  lightNextLink.setAttribute(\"aria-label\", \"Next image\");\r\n  lightNextLink.addEventListener(\"click\", clickNext);\r\n  function clickNext() {\r\n    lightboxNavigate(index + 1);\r\n  }\r\n  lightNextLink.addEventListener(\"keydown\", keyDownNext);\r\n  function keyDownNext(e) {\r\n    if (e.key == 'Enter') {\r\n      lightboxNavigate(index + 1);\r\n    }\r\n  };\r\n\r\n  let lightNextIcon = document.createElement(\"img\");\r\n  lightNextIcon.src = \"Images/Icone-fleche-droite.png\";\r\n  lightNextIcon.className = \"lightbox-icon\";\r\n  lightNextIcon.setAttribute(\"alt\", \"Next icon\");\r\n  \r\n  lightNextLink.appendChild(lightNextIcon);\r\n  lightboxMain.appendChild(lightNextLink);\r\n\r\n  let lightboxClose = document.createElement(\"a\");\r\n  lightboxClose.href = \"#\";\r\n  lightboxClose.className = \"lightbox-icons\";\r\n  lightboxClose.id = \"lightbox_close\";\r\n  lightboxClose.setAttribute(\"aria-label\", \"Close dialog\");\r\n  lightboxClose.addEventListener(\"click\", clickClose);\r\n  function clickClose() {\r\n    lightbox.style.display = \"none\";\r\n    photoHeader.style.display = \"block\";\r\n    photoMain.style.display = \"block\";\r\n  };\r\n  lightboxClose.addEventListener(\"keydown\", keyDownClose);\r\n  function keyDownClose(e) {\r\n    if (e.key == 'Enter') {\r\n      clickClose();\r\n    }\r\n  };\r\n\r\n  let lightCloseIcon = document.createElement(\"img\");\r\n  lightCloseIcon.src = \"Images/Icone-croix.png\";\r\n  lightCloseIcon.className = \"lightbox-icon\";\r\n  lightCloseIcon.setAttribute(\"alt\", \"Close button\");\r\n\r\n  lightboxClose.appendChild(lightCloseIcon);\r\n  lightboxMain.appendChild(lightboxClose);\r\n\r\n  return lightboxMain;\r\n}\r\n\r\n// Permet de naviguer dans la lightbox.\r\nfunction lightboxNavigate(index) {\r\n  if (index >= pictures.length) {\r\n    index = 0;\r\n  }\r\n  if (index < 0) {\r\n    index = pictures.length - 1;\r\n  }\r\n  let media = pictures[index];\r\n  showLightbox(media.photographerId, media.image, media.title, media.description, index);\r\n}\r\n\r\n// Montre la lightbox remplie dynamiquement.\r\nfunction showLightbox(id, image, title, description, index) {\r\n  let section = document.querySelector(\"#lightbox_section\");\r\n  section.innerText = \"\";\r\n  section.appendChild(createLightbox(id, image, title, description, index));\r\n}\r\n\r\n// FENETRE FORM-MODAL\r\n// Récupère le \"span\" qui ferme le formulaire.\r\nlet formSpan = document.getElementById(\"form_close\");\r\n\r\n// Au clic, ferme le formulaire.\r\nformSpan.onclick = function() {\r\n  formModal.style.display = \"none\";\r\n}\r\n\r\n// Récupère le \"span\" qui envoie les données.\r\nlet submitButton = document.getElementById(\"submit_button\");\r\n\r\n// Au clic, envoie les contenus dans la console.\r\nlet firstName = document.getElementById(\"prenom\");\r\nlet lastName = document.getElementById(\"nom\");\r\nlet eMail = document.getElementById(\"email\");\r\nlet mess = document.getElementById(\"message\");\r\nsubmitButton.onclick = function() {\r\n  console.log(firstName.value);\r\n  console.log(lastName.value);\r\n  console.log(eMail.value);\r\n  console.log(mess.value);\r\n}\n\n//# sourceURL=webpack://projet06/./scripts-photographe.js?");

/***/ }),

/***/ "./services.js":
/*!*********************!*\
  !*** ./services.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"getPhotographers\": () => (/* binding */ getPhotographers),\n/* harmony export */   \"getPhotographer\": () => (/* binding */ getPhotographer),\n/* harmony export */   \"getPhotographersByTags\": () => (/* binding */ getPhotographersByTags),\n/* harmony export */   \"getMediasByPhotographers\": () => (/* binding */ getMediasByPhotographers),\n/* harmony export */   \"getOneMediaByMediaId\": () => (/* binding */ getOneMediaByMediaId)\n/* harmony export */ });\n// Récupère l'intégralité du tableau \"photographers\" du fichier JSON.\r\nconst getPhotographers = async() => {\r\n    let {photographers} = await getAll();\r\n    return photographers;\r\n}\r\n\r\n// Récupère le photographe concerné par l'id demandé.\r\nconst getPhotographer = async(id) => {\r\n    let photographers = await getPhotographers();\r\n    let photographer = photographers.find(data => data.id == id);\r\n    return photographer;\r\n}\r\n\r\n// Récupère les photographes concernés par le tag demandé. NE FONCTIONNE PAS POUR L'INSTANT !!\r\n// TEST !!\r\nconst getPhotographersByTags = async(tags) => {\r\n    let photographers = await getPhotographers();\r\n    console.log(photographers[4].tags[3]);   // Résultat correct, \"animals\"     // SUPPRIMER\r\n    let photographersByTags = photographers.filter(data => data.tags == tags);\r\n    console.log(photographersByTags);   // Résultat incorrect, tableau vide     // SUPPRIMER\r\n    return photographersByTags;\r\n}\r\n// FIN TEST !!\r\n\r\n// Récupère les médias concernés par le photographe demandé.\r\nconst getMediasByPhotographers = async(id) => {\r\n    let {media} = await getAll();\r\n    let medias = media.filter(data => data.photographerId == id);\r\n    return medias;\r\n}\r\n\r\n// Récupère le média concerné par l'id de média demandé. NE FONCTIONNE PAS POUR L'INSTANT !!\r\n// TEST !!\r\nconst getOneMediaByMediaId = async(id) => {\r\n    let medias = await getMediasByPhotographers(id);\r\n    //console.log(medias);                                                  // SUPPRIMER\r\n    let oneMedia = medias.find(data => data.id == id);\r\n    //console.log(oneMedia);                                                  // SUPPRIMER\r\n    return oneMedia;\r\n}\r\n// FIN TEST !!\r\n\r\n// Récupère l'intégralité du fichier JSON.\r\nasync function getAll() {\r\n    let data = await fetch(\"FishEyeData.json\").then((res)=>res.json());\r\n    return data;\r\n}\n\n//# sourceURL=webpack://projet06/./services.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./scripts-photographe.js");
/******/ 	
/******/ })()
;